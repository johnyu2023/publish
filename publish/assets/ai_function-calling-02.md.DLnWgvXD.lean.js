import{_ as t,C as c,c as e,o,G as s,w as r,j as n,a}from"./chunks/framework.hcSmgRPt.js";const u="/publish/assets/function-calling.CU5zVjik.png",g="/publish/assets/function-calling-call-function.CBp41qYe.png",C="/publish/assets/mcp-architecture.D_RIOeLD.webp",p="/publish/assets/mcp-before-after.DVJr1MZ6.png",M=JSON.parse('{"title":"Function Calling VS MCP","description":"Function Calling 和 MCP 的关系和区别","frontmatter":{"date":"2025-08-19T00:00:00.000Z","title":"Function Calling VS MCP","description":"Function Calling 和 MCP 的关系和区别"},"headers":[],"relativePath":"ai/function-calling-02.md","filePath":"ai/function-calling-02.md"}'),m={name:"ai/function-calling-02.md"};function d(_,l,f,h,P,F){const i=c("BlogPost");return o(),e("div",null,[s(i,null,{default:r(()=>l[0]||(l[0]=[n("h1",{id:"function-calling-vs-mcp",tabindex:"-1"},[a("Function Calling VS MCP "),n("a",{class:"header-anchor",href:"#function-calling-vs-mcp","aria-label":'Permalink to "Function Calling VS MCP"'},"​")],-1),n("p",null,"短视频里，总有人信誓旦旦认为，MCP 会取代 Function Calling ，这是真的吗？",-1),n("h2",{id:"_1-对-function-calling-的误解",tabindex:"-1"},[a("1. 对 Function Calling 的误解 "),n("a",{class:"header-anchor",href:"#_1-对-function-calling-的误解","aria-label":'Permalink to "1. 对 Function Calling 的误解"'},"​")],-1),n("p",null,[a("很多人对 Function Calling 的理解存在误区，比如像下图所示 "),n("img",{src:u,alt:"Function Calling",class:"content-image"})],-1),n("p",null,"如果是这样的话，那 Function Calling 和 MCP 是一样的，都是通过调用函数来执行任务。",-1),n("h2",{id:"_2-function-calling-真正的位置",tabindex:"-1"},[a("2. Function Calling 真正的位置 "),n("a",{class:"header-anchor",href:"#_2-function-calling-真正的位置","aria-label":'Permalink to "2. Function Calling 真正的位置"'},"​")],-1),n("p",null,"Function Calling 的真正位置应该是下图的蓝色框的部分，就是模型判断是否要调用工具的环节。 而真正调用工具的环节，也就是红色框的部分，是属于对工具的真正调用。MCP其实就是在红框这个部分的。",-1),n("img",{src:g,alt:"Function Calling",class:"content-image"},null,-1),n("h2",{id:"_3-mcp-与-function-calling-到底什么关系",tabindex:"-1"},[a("3. MCP 与 Function Calling 到底什么关系 "),n("a",{class:"header-anchor",href:"#_3-mcp-与-function-calling-到底什么关系","aria-label":'Permalink to "3. MCP 与 Function Calling 到底什么关系"'},"​")],-1),n("p",null,"理解了上图中蓝框和红框的关系后，我们就能理解了MCP 和 Function Calling 的关系了。 其实，二者是互补的关系。 在同一个链路中，二者是可以并存的。",-1),n("h2",{id:"_4-mcp-架构",tabindex:"-1"},[a("4. MCP 架构 "),n("a",{class:"header-anchor",href:"#_4-mcp-架构","aria-label":'Permalink to "4. MCP 架构"'},"​")],-1),n("img",{src:C,alt:"Function Calling",class:"content-image"},null,-1),n("h2",{id:"_5-mcp-的意义",tabindex:"-1"},[a("5. MCP 的意义 "),n("a",{class:"header-anchor",href:"#_5-mcp-的意义","aria-label":'Permalink to "5. MCP 的意义"'},"​")],-1),n("img",{src:p,alt:"Function Calling",class:"content-image"},null,-1)])),_:1,__:[0]})])}const x=t(m,[["render",d]]);export{M as __pageData,x as default};
